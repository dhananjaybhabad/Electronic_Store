package com.infosys.electronicstore.services.impl;import com.infosys.electronicstore.exceptions.BadApiRequestException;import com.infosys.electronicstore.services.FileServiceI;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.*;import java.nio.file.Files;import java.nio.file.Paths;import java.util.UUID;@Slf4j@Servicepublic class FileServiceImpl implements FileServiceI {    @Override    public String uploadFile(MultipartFile file, String path) throws IOException {        String originalFileName = file.getOriginalFilename();        log.info("FileName;{}",originalFileName);        String fileName = UUID.randomUUID().toString();        String extension = originalFileName.substring(originalFileName.indexOf("."));        String fileNameWithExtension = fileName + extension;        String filePathWithFileExtension = path + File.separator + fileNameWithExtension;        log.info("full image path :{}" , filePathWithFileExtension);        if(extension.equalsIgnoreCase(".png")                ||extension.equalsIgnoreCase(".jpg")                ||extension.equalsIgnoreCase(".jpeg")){            log.info("file extension is {}",(extension));            File folder = new File(path);            if(!folder.exists()){                //create folder                folder.mkdirs();            }        } else {            throw new BadApiRequestException(" file with this " + extension + " not allowed ");        }        //upload        Files.copy(file.getInputStream(), Paths.get(filePathWithFileExtension));        return fileNameWithExtension;    }    @Override    public InputStream getResource(String path, String name) throws FileNotFoundException {        String fullPath = path + name;        InputStream inputStream = new FileInputStream(fullPath);        return inputStream;    }}