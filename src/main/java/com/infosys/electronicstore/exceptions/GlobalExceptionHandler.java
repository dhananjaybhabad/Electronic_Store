package com.infosys.electronicstore.exceptions;import com.infosys.electronicstore.dtos.ApiResponse;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.validation.FieldError;import org.springframework.validation.ObjectError;import org.springframework.web.bind.MethodArgumentNotValidException;import org.springframework.web.bind.annotation.ExceptionHandler;import org.springframework.web.bind.annotation.RestControllerAdvice;import java.util.HashMap;import java.util.List;import java.util.Map;@RestControllerAdvicepublic class GlobalExceptionHandler {    //Handler of Resource not found Exception    @ExceptionHandler(ResourceNotFoundException.class)    public ResponseEntity<ApiResponse> resourceNotFoundExceptionHandler(ResourceNotFoundException ex) {        ApiResponse response = ApiResponse.builder().message(ex.getMessage())                .status(HttpStatus.NOT_FOUND).success(true).build();        return new ResponseEntity<>(response,HttpStatus.NOT_FOUND);    }    @ExceptionHandler(MethodArgumentNotValidException.class)    public ResponseEntity<Map<String,Object>>handleMethodArgumentNotValidException(MethodArgumentNotValidException ex){        List<ObjectError> allErrors = ex.getBindingResult().getAllErrors();        HashMap<String, Object> response=new HashMap<>();        allErrors.stream().forEach(objectError -> {            String message = objectError.getDefaultMessage();            String field=((FieldError)objectError).getField();            response.put(field,message);        });        return new ResponseEntity<>(response,HttpStatus.BAD_REQUEST);    }}